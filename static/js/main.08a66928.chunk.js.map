{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StyledCard","styled","Card","_ref","theme","cancelled","marginBottom","spacing","backgroundColor","palette","error","light","StyledTypography","Typography","float","textTransform","EventCard","_ref2","_event$Отменено","event","isCancelled","toLowerCase","reason","React","createElement","CardContent","variant","component","Дата","color","Описание","Link","href","target","Тип","App","Component","constructor","super","this","state","data","componentDidMount","readRemoteFile","complete","results","console","log","setState","render","map","index","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"iRASA,MAAMA,EAAaC,YAAOC,IAAPD,CAAaE,IAAA,IAACC,MAAEA,EAAKC,UAAEA,GAAWF,EAAA,MAAM,CACzDG,aAAcF,EAAMG,QAAQ,MACxBF,GAAa,CACfG,gBAAiBJ,EAAMK,QAAQC,MAAMC,UAInCC,EAAmBX,YAAOY,IAAPZ,CAAmB,CAC1Ca,MAAO,QACPC,cAAe,eA+BjB,MAAMC,EAAYC,IAAe,IAAAC,EAAA,IAAdC,MAAEA,GAAOF,EAC1B,MAAMG,EAAoD,kBAApB,QAAlBF,EAAAC,EAAM,4DAAY,IAAAD,OAAA,EAAlBA,EAAoBG,eAClCC,EAASH,EAAM,oFAAqB,+UAE1C,OACEI,IAAAC,cAACxB,EAAU,CAACK,UAAWe,GACrBG,IAAAC,cAACC,IAAW,KACVF,IAAAC,cAACX,IAAU,CAACa,QAAQ,KAAKC,UAAU,MAChCR,EAAMS,0BAETL,IAAAC,cAACX,IAAU,CAACgB,MAAM,iBACfV,EAAMW,kDAAY,uEAErBP,IAAAC,cAACX,IAAU,CAACa,QAAQ,QAAQC,UAAU,KAAI,mCAChCR,EAAM,oFAAqBI,IAAAC,cAACO,IAAI,CAACC,KAAMb,EAAM,oFAAoBc,OAAO,UAAUd,EAAM,mHAAkC,oFAEpII,IAAAC,cAACZ,EAAgB,KACdO,EAAMe,oBAAO,qDAEfd,GACCG,IAAAC,cAACX,IAAU,CAACgB,MAAM,QAAQH,QAAQ,SAAQ,qDAC7BJ,MAQRa,MAzDf,cAAkBC,YAChBC,cACEC,QACAC,KAAKC,MAAQ,CACXC,KAAM,IAIVC,oBACEC,YAAe,mKAAoK,CACjLC,SAAWC,IACTC,QAAQC,IAAI,wBAAyBF,EAAQJ,MAC7CF,KAAKS,SAAS,CAAEP,KAAMI,EAAQJ,UAKpCQ,SACE,OACE1B,IAAAC,cAAA,WACGe,KAAKC,MAAMC,KAAKS,IAAI,CAAC/B,EAAOgC,IAC3B5B,IAAAC,cAACR,EAAS,CAACoC,IAAKD,EAAOhC,MAAOA,QC9BzBkC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKvD,IAAiD,IAAhDyD,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS7D,EACpEyD,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDnB,OACH1B,IAAAC,cAACD,IAAM8C,WAAU,KACf9C,IAAAC,cAACW,EAAG,QAORkB","file":"static/js/main.08a66928.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { readRemoteFile } from 'react-papaparse';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport { styled } from '@mui/system';\n\nconst StyledCard = styled(Card)(({ theme, cancelled }) => ({\n  marginBottom: theme.spacing(2),\n  ...(cancelled && {\n    backgroundColor: theme.palette.error.light,\n  }),\n}));\n\nconst StyledTypography = styled(Typography)({\n  float: 'right',\n  textTransform: 'capitalize',\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    readRemoteFile('https://docs.google.com/spreadsheets/d/e/2PACX-1vTPva1TqjJb1q71rdIyiL8kCTg1ErWP8OWYJQqDLWZhNPP43EechxS7r7mOzKL43En-FHBx0Ql0J0Lp/pub?gid=0&single=true&output=csv', {\n      complete: (results) => {\n        console.log('Data has been loaded:', results.data);\n        this.setState({ data: results.data });\n      },\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data.map((event, index) => (\n          <EventCard key={index} event={event} />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst EventCard = ({ event }) => {\n  const isCancelled = event['Отменено?']?.toLowerCase() === 'да';\n  const reason = event['Причина отмены'] || 'Я - Катя и я пиздец ленивая, потому причины отмены сегодня не будет';\n\n  return (\n    <StyledCard cancelled={isCancelled}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {event.Дата}\n        </Typography>\n        <Typography color=\"textSecondary\">\n          {event.Описание || 'Нет описания'}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Адрес: {event['Ссылка на карту'] ? <Link href={event['Ссылка на карту']} target=\"_blank\">{event['Адрес по-человечески']}</Link> : 'Адрес не указан'}\n        </Typography>\n        <StyledTypography>\n          {event.Тип || 'Не указан'}\n        </StyledTypography>\n        {isCancelled && (\n          <Typography color=\"error\" variant=\"body2\">\n            Отменено: {reason}\n          </Typography>\n        )}\n      </CardContent>\n    </StyledCard>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}