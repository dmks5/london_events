{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["EventCard","_ref","_event$Отменено","event","isCancelled","toLowerCase","reason","React","createElement","Card","sx","mb","p","bgcolor","color","CardContent","Typography","variant","component","Дата","Описание","Link","href","target","float","textTransform","Тип","App","Component","constructor","super","this","state","data","componentDidMount","readRemoteFile","complete","results","console","log","setState","render","Box","map","index","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sPAqCA,MAAMA,EAAYC,IAAe,IAAAC,EAAA,IAAdC,MAAEA,GAAOF,EAC1B,MAAMG,EAAoD,kBAApB,QAAlBF,EAAAC,EAAM,4DAAY,IAAAD,OAAA,EAAlBA,EAAoBG,eAClCC,EAASH,EAAM,oFAAqB,+UAE1C,OACEI,IAAAC,cAACC,IAAI,CAACC,GAAI,CACRC,GAAI,EACJC,EAAG,KACCR,GAAe,CACjBS,QAAS,cACTC,MAAO,wBAGTP,IAAAC,cAACO,IAAW,KACVR,IAAAC,cAACQ,IAAU,CAACC,QAAQ,KAAKC,UAAU,MAChCf,EAAMgB,0BAETZ,IAAAC,cAACQ,IAAU,CAACN,GAAI,CAAEC,GAAI,EAAGG,MAAO,mBAC7BX,EAAMiB,kDAAY,uEAErBb,IAAAC,cAACQ,IAAU,CAACC,QAAQ,QAAQC,UAAU,IAAIR,GAAI,CAAEC,GAAI,IAAK,mCAC/CR,EAAM,oFAAqBI,IAAAC,cAACa,IAAI,CAACC,KAAMnB,EAAM,oFAAoBoB,OAAO,UAAUpB,EAAM,mHAAkC,oFAEpII,IAAAC,cAACQ,IAAU,CAACN,GAAI,CAAEc,MAAO,QAASC,cAAe,aAAcd,GAAI,IAChER,EAAMuB,oBAAO,qDAEftB,GACCG,IAAAC,cAACQ,IAAU,CAACC,QAAQ,SAAQ,qDACfX,MAQRqB,MAhEf,cAAkBC,YAChBC,cACEC,QACAC,KAAKC,MAAQ,CACXC,KAAM,IAIVC,oBACEC,YAAe,mKAAoK,CACjLC,SAAWC,IACTC,QAAQC,IAAI,wBAAyBF,EAAQJ,MAC7CF,KAAKS,SAAS,CAAEP,KAAMI,EAAQJ,UAKpCQ,SACE,OACElC,IAAAC,cAACkC,IAAG,CAAChC,GAAI,CAAEE,EAAG,IACXmB,KAAKC,MAAMC,KAAKU,IAAI,CAACxC,EAAOyC,IAC3BrC,IAAAC,cAACR,EAAS,CAAC6C,IAAKD,EAAOzC,MAAOA,QClBzB2C,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKlD,IAAiD,IAAhDoD,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASxD,EACpEoD,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCCDW,IAASC,WAAWC,SAASC,eAAe,SACpDpB,OACHlC,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACmB,EAAG,QAORmB","file":"static/js/main.8c3b1d59.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { readRemoteFile } from 'react-papaparse';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport { Box } from '@mui/material';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    readRemoteFile('https://docs.google.com/spreadsheets/d/e/2PACX-1vTPva1TqjJb1q71rdIyiL8kCTg1ErWP8OWYJQqDLWZhNPP43EechxS7r7mOzKL43En-FHBx0Ql0J0Lp/pub?gid=0&single=true&output=csv', {\n      complete: (results) => {\n        console.log('Data has been loaded:', results.data);\n        this.setState({ data: results.data });\n      },\n    });\n  }\n\n  render() {\n    return (\n      <Box sx={{ p: 2 }}>\n        {this.state.data.map((event, index) => (\n          <EventCard key={index} event={event} />\n        ))}\n      </Box>\n    );\n  }\n}\n\nconst EventCard = ({ event }) => {\n  const isCancelled = event['Отменено?']?.toLowerCase() === 'да';\n  const reason = event['Причина отмены'] || 'Я - Катя и я пиздец ленивая, потому причины отмены сегодня не будет';\n\n  return (\n    <Card sx={{\n      mb: 2,\n      p: 2,\n      ...(isCancelled && {\n        bgcolor: 'error.light',\n        color: 'error.contrastText',\n      }),\n    }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {event.Дата}\n        </Typography>\n        <Typography sx={{ mb: 2, color: 'text.secondary' }}>\n          {event.Описание || 'Нет описания'}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" sx={{ mb: 2 }}>\n          Адрес: {event['Ссылка на карту'] ? <Link href={event['Ссылка на карту']} target=\"_blank\">{event['Адрес по-человечески']}</Link> : 'Адрес не указан'}\n        </Typography>\n        <Typography sx={{ float: 'right', textTransform: 'capitalize', mb: 2 }}>\n          {event.Тип || 'Не указан'}\n        </Typography>\n        {isCancelled && (\n          <Typography variant=\"body2\">\n            Отменено: {reason}\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport App from './App';\n\n\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}