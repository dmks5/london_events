{"version":3,"sources":["App.js","index.js"],"names":["EventCard","_ref","_event$Отменено","event","isCancelled","toLowerCase","reason","React","createElement","Card","sx","mb","p","bgcolor","color","CardContent","Typography","variant","component","Дата","Описание","Link","href","target","float","textTransform","Тип","App","Component","constructor","super","this","state","data","componentDidMount","readRemoteFile","complete","results","jsonData","array","headers","slice","map","row","obj","forEach","header","index","convertArrayToJSON","setState","render","Box","key","theme","createTheme","ReactDOM","createRoot","document","getElementById","ThemeProvider"],"mappings":"sQAqDA,MAAMA,EAAYC,IAAe,IAAAC,EAAA,IAAdC,MAAEA,GAAOF,EAC1B,MAAMG,EAAoD,kBAApB,QAAlBF,EAAAC,EAAM,4DAAY,IAAAD,OAAA,EAAlBA,EAAoBG,eAClCC,EAASH,EAAM,oFAAqB,+UAE1C,OACEI,IAAAC,cAACC,IAAI,CAACC,GAAI,CACRC,GAAI,EACJC,EAAG,KACCR,GAAe,CACjBS,QAAS,cACTC,MAAO,wBAGTP,IAAAC,cAACO,IAAW,KACVR,IAAAC,cAACQ,IAAU,CAACC,QAAQ,KAAKC,UAAU,MAChCf,EAAMgB,0BAETZ,IAAAC,cAACQ,IAAU,CAACN,GAAI,CAAEC,GAAI,EAAGG,MAAO,mBAC7BX,EAAMiB,kDAAY,uEAErBb,IAAAC,cAACQ,IAAU,CAACC,QAAQ,QAAQC,UAAU,IAAIR,GAAI,CAAEC,GAAI,IAAK,mCAC/CR,EAAM,oFAAqBI,IAAAC,cAACa,IAAI,CAACC,KAAMnB,EAAM,oFAAoBoB,OAAO,UAAUpB,EAAM,mHAAkC,oFAEpII,IAAAC,cAACQ,IAAU,CAACN,GAAI,CAAEc,MAAO,QAASC,cAAe,aAAcd,GAAI,IAChER,EAAMuB,oBAAO,qDAEftB,GACCG,IAAAC,cAACQ,IAAU,CAACC,QAAQ,SAAQ,qDACfX,MAQRqB,MAjEf,cAAkBC,YAChBC,cACEC,QACAC,KAAKC,MAAQ,CACXC,KAAM,IAIVC,oBACEC,YAAe,mKAAoK,CACjLC,SAAWC,IACT,MAAMC,EAzBd,SAA4BC,GAC1B,MAAMC,EAAUD,EAAM,GAStB,OARaA,EAAME,MAAM,GACHC,IAAIC,IACxB,IAAIC,EAAM,GAIV,OAHAJ,EAAQK,QAAQ,CAACC,EAAQC,KACvBH,EAAIE,GAAUH,EAAII,KAEbH,IAiBcI,CAAmBX,EAAQJ,MAC5CF,KAAKkB,SAAS,CAAEhB,KAAMK,OAM5BY,SACE,OACE3C,IAAAC,cAAC2C,IAAG,CAACzC,GAAI,CAAEE,EAAG,IACXmB,KAAKC,MAAMC,KAAKS,IAAI,CAACvC,EAAO4C,IAC3BxC,IAAAC,cAACR,EAAS,CAACoD,IAAKL,EAAO5C,MAAOA,QCzCxC,MAAMkD,EAAQC,YAAY,IAIbC,IAASC,WAAWC,SAASC,eAAe,SACpDR,OACH3C,IAAAC,cAACmD,IAAa,CAACN,MAAOA,GACpB9C,IAAAC,cAACmB,EAAG","file":"static/js/main.e3155ef1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { readRemoteFile } from 'react-papaparse';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport { Box } from '@mui/material';\n\n\nfunction convertArrayToJSON(array) {\n  const headers = array[0];\n  const data = array.slice(1); // Получаем все строки кроме заголовков\n  const jsonData = data.map(row => {\n    let obj = {};\n    headers.forEach((header, index) => {\n      obj[header] = row[index];\n    });\n    return obj;\n  });\n  return jsonData;\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    readRemoteFile('https://docs.google.com/spreadsheets/d/e/2PACX-1vTPva1TqjJb1q71rdIyiL8kCTg1ErWP8OWYJQqDLWZhNPP43EechxS7r7mOzKL43En-FHBx0Ql0J0Lp/pub?gid=0&single=true&output=csv', {\n      complete: (results) => {\n        const jsonData = convertArrayToJSON(results.data);\n        this.setState({ data: jsonData });\n      },\n    });\n  }\n  \n\n  render() {\n    return (\n      <Box sx={{ p: 2 }}>\n        {this.state.data.map((event, index) => (\n          <EventCard key={index} event={event} />\n        ))}\n      </Box>\n    );\n  }\n}\n\nconst EventCard = ({ event }) => {\n  const isCancelled = event['Отменено?']?.toLowerCase() === 'да';\n  const reason = event['Причина отмены'] || 'Я - Катя и я пиздец ленивая, потому причины отмены сегодня не будет';\n\n  return (\n    <Card sx={{\n      mb: 2,\n      p: 2,\n      ...(isCancelled && {\n        bgcolor: 'error.light',\n        color: 'error.contrastText',\n      }),\n    }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {event.Дата}\n        </Typography>\n        <Typography sx={{ mb: 2, color: 'text.secondary' }}>\n          {event.Описание || 'Нет описания'}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\" sx={{ mb: 2 }}>\n          Адрес: {event['Ссылка на карту'] ? <Link href={event['Ссылка на карту']} target=\"_blank\">{event['Адрес по-человечески']}</Link> : 'Адрес не указан'}\n        </Typography>\n        <Typography sx={{ float: 'right', textTransform: 'capitalize', mb: 2 }}>\n          {event.Тип || 'Не указан'}\n        </Typography>\n        {isCancelled && (\n          <Typography variant=\"body2\">\n            Отменено: {reason}\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport App from './App';\n\nconst theme = createTheme({\n  // здесь можете настроить тему, если нужно\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>\n);\n"],"sourceRoot":""}